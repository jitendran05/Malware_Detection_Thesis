
import os
import array
import math
import pickle
from sklearn.externals import joblib
import sys
import argparse
import os, sys, shutil, time
import re
import pandas as pd
from flask import Flask, request, jsonify, render_template,abort,redirect,url_for
#from werkzeug import secure_filename
from sklearn.externals import joblib
from soln import classify

def cutit(s,n):
   return s[n:]

app = Flask(__name__)

@app.route('/')
def home():
    return render_template('index.html')


	
@app.route('/uploader', methods = ['GET', 'POST'])
def upload_file():
   if request.method == 'POST':
    f = request.files['file']
    f.save(f.filename)
    ##########################################
    # Load classifier
    clf = joblib.load(os.path.join(os.path.dirname(os.path.realpath(__file__)),'classifier/classifier.pkl'))
    features =pickle.loads(open(os.path.join(os.path.dirname(os.path.realpath(__file__))
                                       ,'classifier/features.pkl'),'r').read())
     ##########################################
     #tweet = request.form['tweet']
     #tweet=cutit(f.filename, 12)
    tweet =f.filename
    print(tweet);
     #########################################
    data = classify(tweet)

    pe_features = map(lambda x: data[x], features)
    res = clf.predict([pe_features])[0]
        #########################################
     #print('The file %s is %s' % (os.path.basename(sys.argv[1]),['malicious', 'legitimate'][res]))
    return render_template('result.html', prediction = ['Malign', 'Bengin'][res])


if __name__ == '__main__':
  app.run(debug = True)
